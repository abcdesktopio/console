name: Docker CI build console image

on:
  push:
  pull_request:

env:
    imagetag: "${{ github.event.client_payload.ref || github.ref_name }}"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.imagename.outputs.image }}
    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: HTML5Validator
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: var/www/html/
          css: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
 
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
         
      - name: "image tag"
        run: echo "image tag set to '${{ env.imagetag }}'"

      - name: Build test image console:test.${{ env.imagetag }}
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          context: .
          platforms: linux/amd64
          build-args: |
            BRANCH=${{ env.imagetag }}
            BASE_IMAGE_RELEASE=jammy
            BASE_IMAGE=ubuntu
          push: true
          tags: |
            abcdesktopio/console:test.${{ env.imagetag }}

      - name: Install requirements for testing
        run: |
          ./var/www/html/install-tests.sh

      - name: Start minikube
        uses: medyagh/setup-minikube@latest
        with:
          cache: false

      - name: Try the cluster!
        run: kubectl get pods -A

      - name: Run the actual test
        run: |
          ./var/www/html/run-tests.sh ${{ env.imagetag }}

      - name: Upload webdriver screenshots
        uses: actions/upload-artifact@v4
        with:
          name: webdriver-screenshots
          path: ./var/www/html/tests/screens/

      - name: Build and push console:${{ env.imagetag }}
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          context: .
          platforms: linux/amd64
          build-args: |
            BRANCH=${{ env.imagetag }}
            BASE_IMAGE_RELEASE=jammy
            BASE_IMAGE=ubuntu
          push: true
          tags: |
            abcdesktopio/console:${{ env.imagetag }}
